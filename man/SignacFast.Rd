% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CID.R
\name{SignacFast}
\alias{SignacFast}
\title{Main function for fast classification of Signac with precomputed models}
\usage{
SignacFast(
  E,
  Models,
  spring.dir = NULL,
  num.cores = 1,
  model.use = "nn",
  threshold = 0,
  smooth = T,
  impute = T,
  verbose = T,
  do.normalize = T,
  return.probability = F
)
}
\arguments{
\item{E}{a sparse gene (rows) by cell (column) matrix, or a Seurat object. Rows are HUGO symbols.}

\item{Models}{as returned by data("Models_HPCA"). An ensemble of 1,800 neural network models.}

\item{spring.dir}{If using SPRING, directory to categorical_coloring_data.json. Default is NULL.}

\item{num.cores}{number of cores to use for parallel computation. Default is 1.}

\item{model.use}{Machine learning model to use. Default option is neural network. Can also be set to 'svm' or 'rf'.}

\item{threshold}{Probability threshold for assigning cells to "Unclassified." Default is 0.}

\item{smooth}{if TRUE, smooths the cell type classifications. Default is TRUE.}

\item{impute}{if TRUE, gene expression values are imputed prior to cell type classification. Default is TRUE.}

\item{verbose}{if TRUE, code will report outputs. Default is TRUE.}

\item{do.normalize}{if TRUE, cells are normalized to the mean library size. Default is TRUE.}

\item{return.probability}{if TRUE, returns the probability associated with each cell type label. Default is TRUE.}
}
\value{
cell type annotations at every level of the hierarchy
}
\description{
Main function for fast classification of Signac with precomputed models
}
\examples{
\dontrun{
# download bootstrapped reference data for training models; or load models previously generated with GenerateModels
data("training_HPCA")
# train models (default is neural networks)
Models = ModelGenerator(R = training_HPCA, N = 100, num.cores = 4)

# download single cell data for classification
download.file("https://cf.10xgenomics.com/samples/cell-exp/3.0.0/pbmc_1k_v3/pbmc_1k_v3_filtered_feature_bc_matrix.h5", destfile = "pbmc_1k_v3_filtered_feature_bc_matrix.h5")

# load data, process with Seurat
library(Seurat)
E = Read10X_h5(filename = "pbmc_1k_v3_filtered_feature_bc_matrix.h5")
pbmc <- CreateSeuratObject(counts = E, project = "pbmc")

# run Seurat pipeline
pbmc <- SCTransform(pbmc, verbose = FALSE)
pbmc <- RunPCA(pbmc, verbose = FALSE)
pbmc <- RunUMAP(pbmc, dims = 1:30, verbose = FALSE)
pbmc <- FindNeighbors(pbmc, dims = 1:30, verbose = FALSE)

# classify cells
labels = SignacFast(E = pbmc, Models = Models)
celltypes = Generate_lbls(labels, E = pbmc)
}
}
\seealso{
[Signac()] for another classification function, [GenerateModels()] for building stack of neural networks
}
